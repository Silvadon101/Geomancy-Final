{"ast":null,"code":"import { LineGroup, Point } from './Modules/LineGroupCollisionManager';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./header/header.component\";\nimport * as i2 from \"./about/about.component\";\nimport * as i3 from \"./break/break.component\";\nimport * as i4 from \"./line-expo/line-expo.component\";\nimport * as i5 from \"./line-expo2/line-expo2.component\";\nimport * as i6 from \"./circle-expo/circle-expo.component\";\nimport * as i7 from \"./poly-expo/poly-expo.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.title = 'Geomancy';\n      this.mouse_shape = new LineGroup(...[new Point(1, 0), new Point(1, 30), new Point(8.5, 22), new Point(20, 22)], new Point(1, 0));\n      this.mouse_ctx = null;\n    }\n\n    ngAfterViewInit() {\n      let dpi = window.devicePixelRatio;\n      this.mouse = document.createElement(\"canvas\");\n      this.mouse.style.position = \"fixed\";\n      this.mouse.style.pointerEvents = \"none\";\n      this.mouse.style.top = `0px`;\n      this.mouse.style.left = `0px`;\n      this.mouse.style.width = `${20 / dpi}px`;\n      this.mouse.style.height = `${30 / dpi}px`;\n      this.mouse_ctx = this.mouse.getContext(\"2d\");\n      this.mouse_ctx.canvas.width = 20;\n      this.mouse_ctx.canvas.height = 30;\n      this.mouse_ctx.strokeStyle = \"black\";\n      this.mouse_ctx.lineWidth = 1;\n      this.mouse_ctx.fillStyle = \"white\";\n      let region = new Path2D();\n      region.moveTo(this.mouse_shape.lineArray[0].x, this.mouse_shape.lineArray[0].y);\n      this.mouse_shape.lineArray.forEach(line => {\n        region.lineTo(line.x2, line.y2);\n      });\n      region.closePath();\n      this.mouse_ctx.fill(region);\n      this.mouse_ctx.stroke(region);\n      document.lastChild.lastChild.appendChild(this.mouse);\n    }\n\n    onMouseLeave() {\n      this.mouse.style.visibility = \"hidden\";\n    }\n\n    onMouseEnter() {\n      this.mouse.style.visibility = \"visible\";\n    }\n\n    onMouseMove(event) {\n      this.mouse.style.top = `${event.y}px`;\n      this.mouse.style.left = `${event.x}px`;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseleave\", function AppComponent_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        })(\"mouseenter\", function AppComponent_mouseenter_HostBindingHandler() {\n          return ctx.onMouseEnter();\n        })(\"mousemove\", function AppComponent_mousemove_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        });\n      }\n    },\n    decls: 10,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\")(1, \"app-about\")(2, \"app-break\")(3, \"app-line-expo\")(4, \"app-break\")(5, \"app-line-expo2\")(6, \"app-break\")(7, \"app-circle-expo\")(8, \"app-break\")(9, \"app-poly-expo\");\n      }\n    },\n    directives: [i1.HeaderComponent, i2.AboutComponent, i3.BreakComponent, i4.LineExpoComponent, i5.LineExpo2Component, i6.CircleExpoComponent, i7.PolyExpoComponent],\n    styles: [\"*[_ngcontent-%COMP%]{cursor:none}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}