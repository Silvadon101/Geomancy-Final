{"ast":null,"code":"import { Circle, Point } from '../Modules/LineGroupCollisionManager';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../errata.directive\";\nconst _c0 = [\"canvas1\"];\nexport let CircleExpoComponent = /*#__PURE__*/(() => {\n  class CircleExpoComponent {\n    constructor() {}\n\n    ngAfterViewInit() {\n      let dpi = window.devicePixelRatio;\n      this.context1 = this.canvas1.nativeElement.getContext(\"2d\");\n      this.context1.canvas.width = this.canvas1.nativeElement.clientWidth * dpi;\n      this.context1.canvas.height = this.canvas1.nativeElement.clientHeight * dpi;\n      this.context1.strokeStyle = \"white\";\n      this.context1.fillStyle = \"black\";\n      this.context1.fillRect(0, 0, this.context1.canvas.width, this.context1.canvas.height);\n      this.context1.lineWidth = 0.5;\n      this.context1.beginPath();\n      this.context1.moveTo(0, this.context1.canvas.height / 2);\n      this.context1.lineTo(this.context1.canvas.width, this.context1.canvas.height / 2);\n      this.context1.moveTo(this.context1.canvas.width / 2, 0);\n      this.context1.lineTo(this.context1.canvas.width / 2, this.context1.canvas.height);\n      this.context1.stroke();\n    }\n\n    display(a) {\n      var _a, _b, _c;\n\n      let cx = ((_a = a.get('cx')) === null || _a === void 0 ? void 0 : _a.value) + this.context1.canvas.width / 2;\n      let cy = ((_b = a.get('cy')) === null || _b === void 0 ? void 0 : _b.value) + this.context1.canvas.height / 2;\n      let r = (_c = a.get('r')) === null || _c === void 0 ? void 0 : _c.value;\n      let crc = new Circle(new Point(cx, cy), r);\n      let tracer = 0;\n      clearInterval(this.lastDisplay);\n      this.lastDisplay = setInterval(() => {\n        this.context1.fillRect(0, 0, this.context1.canvas.width, this.context1.canvas.height);\n        this.context1.lineWidth = 0.5;\n        this.context1.beginPath();\n        this.context1.moveTo(0, this.context1.canvas.height / 2);\n        this.context1.lineTo(this.context1.canvas.width, this.context1.canvas.height / 2);\n        this.context1.moveTo(this.context1.canvas.width / 2, 0);\n        this.context1.lineTo(this.context1.canvas.width / 2, this.context1.canvas.height);\n        this.context1.stroke();\n        this.context1.lineWidth = 1;\n        let point = crc.pointFromRadians(Math.PI * 2 * tracer / 60);\n        this.context1.beginPath();\n        this.context1.arc(point.x, point.y, 5, 0, 360);\n        this.context1.closePath();\n        this.context1.stroke();\n        tracer++;\n        tracer %= 60;\n      }, 1000 / 30);\n    }\n\n  }\n\n  CircleExpoComponent.ɵfac = function CircleExpoComponent_Factory(t) {\n    return new (t || CircleExpoComponent)();\n  };\n\n  CircleExpoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CircleExpoComponent,\n    selectors: [[\"app-circle-expo\"]],\n    viewQuery: function CircleExpoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas1 = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 1,\n    consts: [[1, \"back\"], [\"form\", \"ngForm\"], [\"for\", \"\"], [\"type\", \"number\", \"name\", \"cx\", \"required\", \"\", \"ngModel\", \"\"], [\"type\", \"number\", \"name\", \"cy\", \"required\", \"\", \"ngModel\", \"\"], [\"type\", \"number\", \"name\", \"r\", \"required\", \"\", \"ngModel\", \"\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"rgb(65, 25,108)\", \"width\", \"36\", \"height\", \"36\", \"viewBox\", \"0 0 24 24\", 1, \"submit\", 3, \"errata\", \"click\"], [\"d\", \"M24 0l-6 22-8.129-7.239 7.802-8.234-10.458 7.227-7.215-1.754 24-12zm-15 16.668v7.332l3.258-4.431-3.258-2.901z\"], [\"canvas1\", \"\"]],\n    template: function CircleExpoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"main\");\n        i0.ɵɵelement(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Circular Path\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"form\", null, 1)(7, \"label\", 2)(8, \"h3\");\n        i0.ɵɵtext(9, \"Centre X:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\", 2)(12, \"h3\");\n        i0.ɵɵtext(13, \"Centre Y:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"label\", 2)(16, \"h3\");\n        i0.ɵɵtext(17, \"Radius:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(19, \"svg\", 6);\n        i0.ɵɵlistener(\"click\", function CircleExpoComponent_Template__svg_svg_click_19_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return _r0.valid ? ctx.display(_r0.form) : null;\n        });\n        i0.ɵɵelement(20, \"path\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(21, \"canvas\", null, 8);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"errata\", _r0.form);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.NgModel, i2.ErrataDirective],\n    styles: [\"main[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;position:relative;height:calc(100vh - 100px);width:calc(100% - 40px);padding:50px 20px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;overflow:hidden}main[_ngcontent-%COMP%] > h2[_ngcontent-%COMP%]{font-size:36px;color:#41196c;margin-bottom:50px;background:white}div.back[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%) rotate(22.5deg) scale(2.5) rotateX(45deg) rotateY(-22.5deg);background-image:radial-gradient(hsl(196,100%,73%) 5%,transparent 5%);background-color:#fff;background-size:10px 10px;z-index:-1}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;height:calc(100% - 100px)}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-width:300px;width:min-content;height:calc(100% - 40px);padding:20px;background:linear-gradient(hsl(196,100%,93%),hsl(269,100%,93%))}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%]   .submit[_ngcontent-%COMP%]{margin:auto auto 0;padding:5px 15px 5px 10px}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%] > section[_ngcontent-%COMP%]{display:flex;justify-content:space-around;align-items:center;width:100%;height:75px}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%] > section[_ngcontent-%COMP%] > svg[_ngcontent-%COMP%]{fill:#41196c;width:-moz-fit-content;width:fit-content;height:-moz-fit-content;height:fit-content;padding:5px 10px}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{display:flex;flex-direction:column;cursor:none;padding:5px 0}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > form[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:50px;cursor:none}svg[_ngcontent-%COMP%]:hover{border-radius:5px;background:rgba(65,25,108,.25)}main[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > canvas[_ngcontent-%COMP%]{height:100%;width:65%}\"]\n  });\n  return CircleExpoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}