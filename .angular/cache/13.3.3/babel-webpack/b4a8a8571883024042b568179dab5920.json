{"ast":null,"code":"import { Line, Point } from '../Modules/LineGroupCollisionManager';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"canvas1\"];\nexport let AboutComponent = /*#__PURE__*/(() => {\n  class AboutComponent {\n    constructor() {\n      this.design = [new Line(new Point(0, 0), new Point(0, 0))];\n    }\n\n    ngAfterViewInit() {\n      let dpi = window.devicePixelRatio;\n      this.canvas1.nativeElement.style.position = \"absolute\";\n      this.canvas1.nativeElement.style.zIndex = \"-1\";\n      this.canvas1.nativeElement.style.minHeight = \"75vh\";\n      this.canvas1.nativeElement.style.minWidth = \"100vh\";\n      this.canvas1.nativeElement.style.height = \"600px\";\n      this.canvas1.nativeElement.style.width = \"800px\";\n      this.canvas1.nativeElement.style.top = \"0\";\n      this.canvas1.nativeElement.style.right = \"0\";\n      this.context1 = this.canvas1.nativeElement.getContext(\"2d\");\n      this.context1.canvas.width = this.canvas1.nativeElement.clientWidth * dpi;\n      this.context1.canvas.height = this.canvas1.nativeElement.clientHeight * dpi;\n      this.context1.fillStyle = \"rgb(65, 55, 117)\";\n      this.context1.beginPath();\n      this.context1.moveTo(0, this.context1.canvas.height);\n      this.context1.lineTo(this.context1.canvas.width * 0.8, 0);\n      this.context1.lineTo(this.context1.canvas.width * 0.8 + 50, 0);\n      this.context1.lineTo(50, this.context1.canvas.height);\n      this.context1.closePath();\n      this.context1.fill();\n      this.context1.fillStyle = \"rgb(65, 85, 135)\";\n      this.context1.beginPath();\n      this.context1.moveTo(this.context1.canvas.width * 0.1, this.context1.canvas.height);\n      this.context1.lineTo(this.context1.canvas.width * 0.9, 0);\n      this.context1.lineTo(this.context1.canvas.width * 0.9 + 100, 0);\n      this.context1.lineTo(this.context1.canvas.width * 0.1 + 100, this.context1.canvas.height);\n      this.context1.closePath();\n      this.context1.fill();\n      this.context1.fillStyle = \"rgb(65, 115, 153)\";\n      this.context1.beginPath();\n      this.context1.moveTo(this.context1.canvas.width * 0.25, this.context1.canvas.height);\n      this.context1.lineTo(this.context1.canvas.width * 1.05, 0);\n      this.context1.lineTo(this.context1.canvas.width * 1.05 + 200, 0);\n      this.context1.lineTo(this.context1.canvas.width * 0.25 + 200, this.context1.canvas.height);\n      this.context1.closePath();\n      this.context1.fill();\n      this.context1.fillStyle = \"rgb(65, 145, 171)\";\n      this.context1.beginPath();\n      this.context1.moveTo(this.context1.canvas.width * 0.5, this.context1.canvas.height);\n      this.context1.lineTo(this.context1.canvas.width * 1.3, 0);\n      this.context1.lineTo(this.context1.canvas.width * 1.3 + 400, 0);\n      this.context1.lineTo(this.context1.canvas.width * 0.5 + 400, this.context1.canvas.height);\n      this.context1.closePath();\n      this.context1.fill();\n    }\n\n  }\n\n  AboutComponent.ɵfac = function AboutComponent_Factory(t) {\n    return new (t || AboutComponent)();\n  };\n\n  AboutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AboutComponent,\n    selectors: [[\"app-about\"]],\n    viewQuery: function AboutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas1 = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 0,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"rgb(65,25,108)\", \"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", 2, \"transform\", \"rotate(90deg) translateX(10px)\"], [\"d\", \"M14 12l-14 9v-18l14 9zm-4-9v4l8.022 5-8.022 5v4l14-9-14-9z\"], [\"canvas1\", \"\"]],\n    template: function AboutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\")(1, \"h2\");\n        i0.ɵɵtext(2, \"What is Geomancy?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"The Geomancy module is a general purpose tool created to generate, monitor and manipulate geometric shapes and lines on a 2 dimensional plane.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"Assess collisions, check if points are along lines or circumferences and track paths - whether it be for animation or mathematical simulations.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"Expos Below \");\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(11, \"svg\", 0);\n        i0.ɵɵelement(12, \"path\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(13, \"canvas\", null, 2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"main[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;position:relative;height:calc(75vh - 100px);width:calc(100% - 40px);padding:50px 20px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;overflow:hidden}main[_ngcontent-%COMP%] > h2[_ngcontent-%COMP%]{font-size:36px;color:#41196c;margin-bottom:50px}main[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{font-size:18px;width:50%;font-weight:500}\"]\n  });\n  return AboutComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}